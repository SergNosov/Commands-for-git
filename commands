For x64 Windows change to:
git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin" 

Создание пустого репозитория в существующей директории:
$ git init

Клонирование репозитория
git clone [url]. ( например $ git clone https://github.com/khasang-incubator/projectmanagement)

доабление в пустой репозитьрий 
git add .

Основной инструмент, используемый для определения, какие файлы в каком состоянии находятся ^
git status

Сокращенный вывод статуса
git status -s или git status --short

вам хочется знать, что конкретно поменялось,
 а не только какие файлы были изменены — вы можете использовать команду

git diff

Если вы хотите посмотреть, что вы проиндексировали и 
что войдёт в следующий коммит, вы можете выполнить 

git diff --staged  (Эта команда сравнивает ваши индексированные изменения с последним коммитом)


Вы можете набрать свой комментарий к коммиту
 в командной строке вместе с командой commit указав
 его после параметра -m, как в следующем примере:

$ git commit -m "Story 182: Fix benchmarks for speed"

автоматическое индексирование изменений и создание еще одного коммита
$ git commit -a -m 'added new benchmarks'

подключение удаленного репозитория:
$ git remote add origin https://github.com/SergNosov/springdp.git

Загрузка локального репозитория на удаленный:
$ git push origin master   (после этой команды должно спросить логин/пароль)

История коммитов:
git log

Получение изменений из удалённого репозитория - Fetch и Pull

команда связывается с указанным удалённым проектом и 
забирает все те данные проекта, которых у вас ещё нет. 
После того как вы выполнили команду, у вас должны появиться
 ссылки на все ветки из этого удалённого проекта. Теперь эти 
ветки в любой момент могут быть просмотрены или слиты.

$ git fetch [remote-name]


Если у вас есть ветка, настроенная на отслеживание 
удалённой ветки (обратитесь к главе 3 Ветвление в Git 
за более подробной информацией), то вы можете использовать 
команду git pull чтобы автоматически получить изменения из 
удалённой ветви и слить их со своей текущей ветвью. 
Этот способ может для вас оказаться более простым или более удобным.

git pull

Когда вы хотите поделиться своими наработками, вам необходимо 
отправить (push) их в главный репозиторий. 
Команда для этого действия простая:

git push [remote-name] [branch-name]. 

Если хотите получить побольше информации об одном из удалённых
 репозиториев, вы можете использовать команду

 git remote show [remote-name].


СОЗДАНИЕ НОВОЙ ВЕТКИ

$ git branch <имя ветки>

перечень веток

git branch

Чтобы переключиться на существующую ветку, выполните команду 

git checkout <имя ветки>

История ваших коммитов и покажет, где находятся указатели ваших веток,
 и как ветвилась история проекта:

git log --oneline --decorate --graph --all


Для удаления ветки выполните команду git branch с параметром -d:

$ git branch -d <имя вктки>

Узнать последний коммит на каждой из веток, выполните команду:

 git branch -v

Если вы хотите посмотреть какие отслеживаемые ветки у вас 
установлены, вы можете воспользоваться опцией
 -vv в команде git branch

git branch -vv


Ещё одна полезная возможность для выяснения состояния веток
 состоит в том, чтобы оставить в этом списке только те ветки,
 которые вы слили (или не слили) в ветку, на которой сейчас 
находитесь.
 Для этих целей в Git’е есть опции --merged и --no-merged. 

Чтобы посмотреть те ветки, которые вы уже слили с текущей,
 можете выполнить команду

 git branch --merged:

Чтобы увидеть все ветки, содержащие наработки, которые вы
 пока ещё не слили в текущую ветку, выполните команду:

 git branch --no-merged:
